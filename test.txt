var connectEvent=new Elog({type:'CONNECTION', socket:socket.id, room:'Lobby'})

connectEvent.save((err)=>{

if (err) throw err;

console.log('\n==========STORE EVENT IN DATABASE==========\nSocket: '+connectEvent.socket+'\nWith type: '+connectEvent.type+"\nHas been connected @: "+ connectEvent.connect +'\nIn the: '+connectEvent.room+'\nSaved to database at: '+ connectEvent.connect)

})

//creates a txt file of the event

fs.appendFile('./eventLog.txt', connectEvent.type+" has been started @ "+ connectEvent.connect +' for socket '+connectEvent.socket+'in the '+connectEvent.room+"\n", {'flags': 'a'},(err)=>{

if (err) throw err;

}) 



socket.on('new user', (data ,callback) =>{ 

//if a user exists in the dictionary, return an error message to client

if (data in users){

callback(false);

}

else {

//if a new user exits, create one, store in dictionary

callback(true);

socket.nickname = data;

users[socket.nickname] = socket;

updateNicknames();

//store in database

var newUser = new User({username: data})

newUser.save((err)=>{

if (err) throw err;

console.log('\n==========STORE USER IN DATABASE==========\nUser: '+newUser.username+"\nSaved to database")

})

//stores new socket

var newSock=new Sockio({socket_id:socket.id, createdBy:newUser.username})

newSock.save((err)=>{

if (err) throw err;

console.log('\n==========STORE SOCKET IN DATABASE==========\nSocket: '+newSock.socket_id+"\nCreated by: "+ newSock.createdBy+"\nSaved to database at: "+ newSock.connectTime)

})

//store event

var newUserEvent=new Elog({type:'NEW USER',name:newUser.username, socket:socket.id, room:'Main Room'})

newUserEvent.save((err)=>{

if (err) throw err;

console.log('\n==========STORE EVENT IN DATABASE==========\nEvent Type: '+newUserEvent.type+'\nCreated by: ' + newUserEvent.name + '\nFor Socket: '+newUserEvent.socket+'\nIn the: '+newUserEvent.room+'\nSaved to database at: '+ newUserEvent.connect)

})

//creates a txt file of the event

fs.appendFile('./eventLog.txt', newUserEvent.socket+" has been created @ "+ newUserEvent.connect +" and created by "+ newUserEvent.name +' in the '+newUserEvent.room+"\n", {'flags': 'a'},(err)=>{

if (err) throw err;

})

socket.room = 'Main room';

// add the users's username to the global list

// send user to Main room

socket.join('Main room');

// echo to user they've connected

// echo to Main room that another user has connected to their room

socket.emit('updatechat', 'CHAT BOT NINJA SAYS', 'you have connected to Main room');

socket.broadcast.to('Main room').emit('updatechat', 'CHAT BOT NINJA SAYS', socket.nickname + ' has connected to this room');

socket.emit('updaterooms', rooms, 'Main room');

}â€‹